First you need to get an account on Grid5000:
https://www.grid5000.fr/mediawiki/index.php/Grid5000:Get_an_account

Initial setup for the first time:

First you need benchmark images.
Ask me for images if you need them or you can make them yourself by doing the following:
Instructions for getting an images deploying them can be found here
https://www.grid5000.fr/mediawiki/index.php/Deploy_environment-OAR2

To configure an image you need to:
1. Install erlang as described here https://github.com/SyncFree/antidote
2. Install antidote in /root/antidote
3. Install basho_bench (https://github.com/SyncFree/basho_bench) in /root/basho_bench[1-6]/basho_bench
4. Put your benchmark key in the /root/.ssh folder
5. Put a file named key that links to your key in the /root/ directory

Now you need to have the antidote image and env file in each site you want to run the experiment
~/antidote_images/antidote_image_init.tgz
~/antidote_images/mywheezy-x64-base.env

In ~/ make a file called key that links to your benchmar key

Also in each site create a ~/basho_bench/script/ folder and place the following files it in:
grid5000start.sh
grid5000start-createnodes.sh
parallel_command.sh
mergeResults.awk
mergeResults.sh
mergeResultsSummary.awk

Thats all for setup!!!



Now how to run a benchmark:

First you need to reserve some nodes (note there are rules for how many nodes you can reserve at a time, see the grid5000 website).

This gives an 30 min reservation with 1 node at rennes and one at lille:
oargridsub -t deploy -w '0:30:00' rennes:rdef="/nodes=1",lille:rdef="/nodes=1"

The following command reserves 22 nodes in the suno cluster at the sophia site, and 22 nodes in the chinqchint cluster at the lille site, for 6 hours, with the reservation set to start at 20h 2015-07-26

oargridsub -t deploy -w '6:00:00' -s '2015-07-26 20:00:00' sophia:rdef="/nodes=22":prop="cluster='suno'",lille:rdef="/nodes=22":prop="cluster='chinqchint'"

If you wanted to start the reservation immediately remove the -s option.

Note that each site will be created into a DC, for the example above you will have 2 DCs, lille and sophia.
There is an exception, if you set the number of nodes for a certain site to be equal to the number of BenchNodes (see below), then a DC will not be created at this site and will only be a site running basho_bench.  Otherwise the reservation should reserve the same number of nodes per site.


Then run this from the frontend to deploy the nodes and run the benchmark:

~/basho_scripts/grid5000start.sh JobId Branch Deploy SecondRun AntidoteNodes BenchNodes BenchInstances BenchConfigFile

The options are the following:
JobId:
This is the id assigned to the reservation.  You can see information about the reservations by running oargridstat

Branch:
This is the git branch of antidote to benchmark.

Deploy:
This can be 1 or 0.  This should be 1 the first time you run the benchmark on a reservation and 0 for subsequent runs.  If it is 1, then the image will be loaded on the nodes.

SecondRun:
This can be 1 or 0.  When this is 1 the source code for antidote and basho_bench will be pulled from git and compiled.  It should be 0 every time the code should be compiled, for example when you changed something, or the number of benchmark nodes.  It should always be zero on the first run of a reservation.

AntidoteNodes:
This is how many nodes per DC will be running as part of the antidote cluster/ring in that DC.

BenchNodes:
This is how many nodes per DC will be running the basho_bench.  The sum of AntidoteNodes and BenchNodes should be no greater than the number of nodes reserved per site (but can be less).

BenchInstances:
This is a value 1 through 6.  It is the number of basho_bench instances that will be run per basho_bench node. Note that I put this here just because I noticed that a single instance of bash_bench wansn't using all resources on that node, but I didn't look into detail why this happens.

BenchConfigFile:
This is the name of the basho_bench configuration file for the benchmark in the examples directory.


An example first run might be:
~/basho_bench/script/grid5000start.sh 53738 weak_meta_data 1 0 5 6 antidote_pb.config



Watch the output for errors, likely the first time you didn't get the configuration completely correct (these instructions aren't super clear).

The benchmark should take some time to run, it will run several tests with read(update) ratios of ("99.99(.01)", "99(1)", "90(10)", "75(25)", "50(50)", "1(99)")

At the end you will get an message saying the name of the result file with all the results tarred up.

Scp this file to your local machine in the basho_bench/ folder (of this git clone in which this readme exists).

Now from this folder run:
./script/makeGraph.sh result_file_name
(Note you should not include the tar extenstion as part of the input).


NOTE: If you want to run multiple benchmarks on different reservations at the same time you can, but run them from different fronends as they may overwrite temporary files from eachother (note I should fix this)


Some other notes:


This doesnt work, don't have the rights to run kdeploy directly from the deploy job:

oargridsub -t deploy -w '0:30:00' rennes:rdef="/nodes=1",lille:rdef="/nodes=1" -p ~/basho_scripts/grid5000start.sh



A grid job that you can ssh to:

oargridsub -t deploy -w '0:30:00' rennes:rdef="/nodes=1",lille:rdef="/nodes=1"

oargridstat

oargridstat -w -l 53584 | sed '/^$/d' > ~/machines

OAR_JOB_ID=53584 oarsh -i /tmp/oargrid//oargrid_ssh_key_tcrain_53579 `head -n 1 machines`

oargriddel 53577